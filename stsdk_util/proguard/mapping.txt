# compiler: R8
# compiler_version: 4.0.52
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"2.1"}
# pg_map_id: 0542685
# pg_map_hash: SHA-256 054268522dc678c4129b69748098b9b565b412a27836add2d515f1a26fc041ec
com.ldrobot.bean.BuildConfig -> com.ldrobot.bean.BuildConfig:
    1:1:void <init>():6:6 -> <init>
org.apache.commons.codec.BinaryDecoder -> OooO00o.OooO00o:
    byte[] decode(byte[]) -> OooO00o
org.apache.commons.codec.BinaryEncoder -> OooO00o.OooO0O0:
    byte[] encode(byte[]) -> OooO0O0
org.apache.commons.codec.CharEncoding -> OooO00o.OooO0OO:
    java.lang.String UTF_8 -> OooO0o
    java.lang.String US_ASCII -> OooO0O0
    java.lang.String UTF_16 -> OooO0OO
    java.lang.String UTF_16BE -> OooO0Oo
    java.lang.String UTF_16LE -> OooO0o0
    java.lang.String ISO_8859_1 -> OooO00o
    1:1:void <init>():55:55 -> <init>
org.apache.commons.codec.Decoder -> OooO00o.OooO0o:
    java.lang.Object decode(java.lang.Object) -> OooO0O0
org.apache.commons.codec.DecoderException -> org.apache.commons.codec.DecoderException:
    1:1:void <init>():43:43 -> <init>
    2:2:void <init>(java.lang.String):54:54 -> <init>
    3:3:void <init>(java.lang.String,java.lang.Throwable):73:73 -> <init>
    4:4:void <init>(java.lang.Throwable):87:87 -> <init>
org.apache.commons.codec.Encoder -> OooO00o.OooO:
    java.lang.Object encode(java.lang.Object) -> OooO00o
org.apache.commons.codec.EncoderException -> org.apache.commons.codec.EncoderException:
    1:1:void <init>():44:44 -> <init>
    2:2:void <init>(java.lang.String):55:55 -> <init>
    3:3:void <init>(java.lang.String,java.lang.Throwable):74:74 -> <init>
    4:4:void <init>(java.lang.Throwable):88:88 -> <init>
org.apache.commons.codec.StringDecoder -> OooO00o.OooOO0:
    java.lang.String decode(java.lang.String) -> OooO00o
org.apache.commons.codec.StringEncoder -> OooO00o.OooOO0O:
    java.lang.String encode(java.lang.String) -> OooO0O0
org.apache.commons.codec.StringEncoderComparator -> OooO00o.OooOOO0:
    org.apache.commons.codec.StringEncoder stringEncoder -> OooO00o
    1:2:void <init>():43:44 -> <init>
    3:4:void <init>(org.apache.commons.codec.StringEncoder):53:54 -> <init>
    1:3:int compare(java.lang.Object,java.lang.Object):75:77 -> compare
org.apache.commons.codec.binary.Base32 -> org.apache.commons.codec.binary.OooO00o:
    int BITS_PER_ENCODED_BYTE -> OooOo
    int MASK_5BITS -> Oooo000
    long bitWorkArea -> OooOOo
    int BYTES_PER_UNENCODED_BLOCK -> OooOoO
    int encodeSize -> OooOo0
    int BYTES_PER_ENCODED_BLOCK -> OooOoO0
    byte[] DECODE_TABLE -> OooOoo0
    byte[] ENCODE_TABLE -> OooOoo
    byte[] HEX_DECODE_TABLE -> OooOooO
    byte[] HEX_ENCODE_TABLE -> OooOooo
    int decodeSize -> OooOOoo
    byte[] decodeTable -> OooOo00
    byte[] CHUNK_SEPARATOR -> OooOoOO
    byte[] encodeTable -> OooOo0O
    byte[] lineSeparator -> OooOo0o
    1:49:void <clinit>():60:108 -> <clinit>
    1:1:void <init>():162:162 -> <init>
    2:2:void <init>(boolean):173:173 -> <init>
    3:3:void <init>(int):187:187 -> <init>
    4:4:void <init>(int,byte[]):208:208 -> <init>
    5:26:void <init>(int,byte[],boolean):231:252 -> <init>
    27:28:void <init>(int,byte[],boolean):247:248 -> <init>
    29:43:void <init>(int,byte[],boolean):243:257 -> <init>
    1:68:void decode(byte[],int,int):283:350 -> OooO00o
    69:72:void decode(byte[],int,int):340:343 -> OooO00o
    73:76:void decode(byte[],int,int):334:337 -> OooO00o
    77:79:void decode(byte[],int,int):329:331 -> OooO00o
    80:80:void decode(byte[],int,int):326:326 -> OooO00o
    81:81:void decode(byte[],int,int):323:323 -> OooO00o
    82:82:boolean isInAlphabet(byte):471:471 -> OooO00o
    1:53:void encode(byte[],int,int):372:424 -> OooO0O0
    54:61:void encode(byte[],int,int):407:414 -> OooO0O0
    62:69:void encode(byte[],int,int):397:404 -> OooO0O0
    70:139:void encode(byte[],int,int):386:455 -> OooO0O0
org.apache.commons.codec.binary.Base32InputStream -> org.apache.commons.codec.binary.OooO0O0:
    1:1:void <init>(java.io.InputStream):48:48 -> <init>
    2:2:void <init>(java.io.InputStream,boolean):61:61 -> <init>
    3:3:void <init>(java.io.InputStream,boolean,int,byte[]):81:81 -> <init>
org.apache.commons.codec.binary.Base32OutputStream -> org.apache.commons.codec.binary.OooO0OO:
    1:1:void <init>(java.io.OutputStream):48:48 -> <init>
    2:2:void <init>(java.io.OutputStream,boolean):61:61 -> <init>
    3:3:void <init>(java.io.OutputStream,boolean,int,byte[]):81:81 -> <init>
org.apache.commons.codec.binary.Base64 -> org.apache.commons.codec.binary.OooO0o:
    int BITS_PER_ENCODED_BYTE -> OooOo
    byte[] decodeTable -> OooOOoo
    int encodeSize -> OooOo0O
    int bitWorkArea -> OooOo0o
    int MASK_6BITS -> OooOooo
    int BYTES_PER_ENCODED_BLOCK -> OooOoO
    int decodeSize -> OooOo0
    int BYTES_PER_UNENCODED_BLOCK -> OooOoO0
    byte[] STANDARD_ENCODE_TABLE -> OooOoo0
    byte[] URL_SAFE_ENCODE_TABLE -> OooOoo
    byte[] DECODE_TABLE -> OooOooO
    byte[] lineSeparator -> OooOo00
    byte[] CHUNK_SEPARATOR -> OooOoOO
    byte[] encodeTable -> OooOOo
    1:42:void <clinit>():71:112 -> <clinit>
    1:1:void <init>():176:176 -> <init>
    2:2:void <init>(boolean):195:195 -> <init>
    3:3:void <init>(int):217:217 -> <init>
    4:4:void <init>(int,byte[]):243:243 -> <init>
    5:5:void <init>(int,byte[],boolean):272:272 -> <init>
    6:154:void <init>(int,byte[],boolean):140:288 -> <init>
    155:171:void <init>(int,byte[],boolean):279:295 -> <init>
    1:1:byte[] encodeBase64(byte[]):537:537 -> OooO
    1:48:void decode(byte[],int,int):417:464 -> OooO00o
    49:50:void decode(byte[],int,int):458:459 -> OooO00o
    51:51:byte[] encodeBase64(byte[],boolean,boolean):622:622 -> OooO00o
    52:67:byte[] encodeBase64(byte[],boolean,boolean,int):642:657 -> OooO00o
    68:68:byte[] encodeBase64(byte[],boolean,boolean,int):651:651 -> OooO00o
    69:69:byte[] encodeInteger(java.math.BigInteger):712:712 -> OooO00o
    70:70:byte[] encodeInteger(java.math.BigInteger):710:710 -> OooO00o
    71:71:boolean isInAlphabet(byte):755:755 -> OooO00o
    1:30:void encode(byte[],int,int):328:357 -> OooO0O0
    31:74:void encode(byte[],int,int):342:385 -> OooO0O0
    75:75:byte[] encodeBase64(byte[],boolean):604:604 -> OooO0O0
    76:95:byte[] toIntegerBytes(java.math.BigInteger):723:742 -> OooO0O0
    1:1:boolean isBase64(byte):493:493 -> OooO0OO
    1:1:boolean isUrlSafe():305:305 -> OooO0o
    2:2:boolean isBase64(java.lang.String):507:507 -> OooO0o
    1:1:byte[] decodeBase64(java.lang.String):669:669 -> OooO0o0
    1:1:byte[] decodeBase64(byte[]):680:680 -> OooO0oO
    1:1:java.math.BigInteger decodeInteger(byte[]):695:695 -> OooO0oo
    1:1:byte[] encodeBase64Chunked(byte[]):589:589 -> OooOO0
    1:1:java.lang.String encodeBase64String(byte[]):552:552 -> OooOO0O
    1:1:byte[] encodeBase64URLSafe(byte[]):565:565 -> OooOO0o
    1:1:boolean isArrayByteBase64(byte[]):481:481 -> OooOOO
    1:1:java.lang.String encodeBase64URLSafeString(byte[]):578:578 -> OooOOO0
    1:2:boolean isBase64(byte[]):521:522 -> OooOOOO
org.apache.commons.codec.binary.Base64InputStream -> org.apache.commons.codec.binary.OooO:
    1:1:void <init>(java.io.InputStream):53:53 -> <init>
    2:2:void <init>(java.io.InputStream,boolean):66:66 -> <init>
    3:3:void <init>(java.io.InputStream,boolean,int,byte[]):86:86 -> <init>
org.apache.commons.codec.binary.Base64OutputStream -> org.apache.commons.codec.binary.OooOO0:
    1:1:void <init>(java.io.OutputStream):53:53 -> <init>
    2:2:void <init>(java.io.OutputStream,boolean):66:66 -> <init>
    3:3:void <init>(java.io.OutputStream,boolean,int,byte[]):86:86 -> <init>
org.apache.commons.codec.binary.BaseNCodec -> org.apache.commons.codec.binary.OooOO0O:
    boolean eof -> OooO
    byte PAD -> OooO00o
    int PEM_CHUNK_SIZE -> OooOOO0
    int unencodedBlockSize -> OooO0O0
    int chunkSeparatorLength -> OooO0o0
    int encodedBlockSize -> OooO0OO
    int lineLength -> OooO0Oo
    int pos -> OooO0oO
    int readPos -> OooO0oo
    int DEFAULT_BUFFER_RESIZE_FACTOR -> OooOOO
    int currentLinePos -> OooOO0
    int modulus -> OooOO0O
    int MIME_CHUNK_SIZE -> OooOO0o
    byte[] buffer -> OooO0o
    int DEFAULT_BUFFER_SIZE -> OooOOOO
    int MASK_8BITS -> OooOOOo
    byte PAD_DEFAULT -> OooOOo0
    1:1:void <init>(int,int,int,int):136:136 -> <init>
    2:67:void <init>(int,int,int,int):75:140 -> <init>
    void decode(byte[],int,int) -> OooO00o
    boolean isInAlphabet(byte) -> OooO00o
    1:1:int available():158:158 -> OooO00o
    2:3:void ensureBufferSize(int):189:190 -> OooO00o
    4:7:java.lang.Object encode(java.lang.Object):261:264 -> OooO00o
    8:8:java.lang.Object encode(java.lang.Object):262:262 -> OooO00o
    9:16:byte[] decode(byte[]):317:324 -> OooO00o
    17:18:boolean isInAlphabet(byte[],boolean):383:384 -> OooO00o
    void encode(byte[],int,int) -> OooO0O0
    int getDefaultBufferSize() -> OooO0O0
    boolean isWhiteSpace(byte) -> OooO0O0
    1:6:java.lang.Object decode(java.lang.Object):289:294 -> OooO0O0
    7:14:byte[] encode(byte[]):336:343 -> OooO0O0
    1:1:boolean hasData():149:149 -> OooO0OO
    2:11:int readResults(byte[],int,int):207:216 -> OooO0OO
    12:12:byte[] decode(java.lang.String):306:306 -> OooO0OO
    13:14:boolean containsAlphabetOrPad(byte[]):418:419 -> OooO0OO
    1:6:void reset():242:247 -> OooO0Oo
    7:7:java.lang.String encodeAsString(byte[]):355:355 -> OooO0Oo
    8:8:boolean isInAlphabet(java.lang.String):402:402 -> OooO0Oo
    1:4:long getEncodedLength(byte[]):437:440 -> OooO0o
    1:8:void resizeBuffer():172:179 -> OooO0o0
    9:9:java.lang.String encodeToString(byte[]):275:275 -> OooO0o0
org.apache.commons.codec.binary.BaseNCodecInputStream -> org.apache.commons.codec.binary.OooOOO0:
    boolean doEncode -> OooO00o
    org.apache.commons.codec.binary.BaseNCodec baseNCodec -> OooO0O0
    byte[] singleByte -> OooO0OO
    1:1:void <init>(java.io.InputStream,org.apache.commons.codec.binary.BaseNCodec,boolean):38:38 -> <init>
    2:7:void <init>(java.io.InputStream,org.apache.commons.codec.binary.BaseNCodec,boolean):35:40 -> <init>
    1:6:int read():52:57 -> read
    7:42:int read(byte[],int,int):84:119 -> read
    43:43:int read(byte[],int,int):88:88 -> read
    44:44:int read(byte[],int,int):86:86 -> read
org.apache.commons.codec.binary.BaseNCodecOutputStream -> org.apache.commons.codec.binary.OooOOO:
    boolean doEncode -> OooO00o
    org.apache.commons.codec.binary.BaseNCodec baseNCodec -> OooO0O0
    byte[] singleByte -> OooO0OO
    1:1:void <init>(java.io.OutputStream,org.apache.commons.codec.binary.BaseNCodec,boolean):38:38 -> <init>
    2:7:void <init>(java.io.OutputStream,org.apache.commons.codec.binary.BaseNCodec,boolean):35:40 -> <init>
    1:10:void flush(boolean):103:112 -> OooO00o
    1:7:void close():136:142 -> close
    1:1:void flush():124:124 -> flush
    1:2:void write(int):53:54 -> write
    3:14:void write(byte[],int,int):78:89 -> write
    15:15:void write(byte[],int,int):82:82 -> write
    16:16:void write(byte[],int,int):80:80 -> write
org.apache.commons.codec.binary.BinaryCodec -> org.apache.commons.codec.binary.OooOOOO:
    int[] BITS -> OooOO0O
    int BIT_6 -> OooO
    int BIT_2 -> OooO0o0
    int BIT_0 -> OooO0OO
    int BIT_1 -> OooO0Oo
    int BIT_4 -> OooO0oO
    int BIT_5 -> OooO0oo
    int BIT_7 -> OooOO0
    char[] EMPTY_CHAR_ARRAY -> OooO00o
    int BIT_3 -> OooO0o
    byte[] EMPTY_BYTE_ARRAY -> OooO0O0
    1:30:void <clinit>():41:70 -> <clinit>
    1:1:void <init>():35:35 -> <init>
    1:4:java.lang.Object encode(java.lang.Object):95:98 -> OooO00o
    5:5:java.lang.Object encode(java.lang.Object):96:96 -> OooO00o
    6:6:byte[] decode(byte[]):136:136 -> OooO00o
    7:19:byte[] fromAscii(char[]):167:179 -> OooO00o
    20:20:byte[] fromAscii(char[]):168:168 -> OooO00o
    1:1:byte[] encode(byte[]):81:81 -> OooO0O0
    2:13:java.lang.Object decode(java.lang.Object):113:124 -> OooO0O0
    1:3:byte[] toByteArray(java.lang.String):149:151 -> OooO0OO
    4:16:byte[] fromAscii(byte[]):194:206 -> OooO0OO
    1:1:boolean isEmpty(byte[]):221:221 -> OooO0Oo
    1:15:char[] toAsciiChars(byte[]):264:278 -> OooO0o
    1:15:byte[] toAsciiBytes(byte[]):234:248 -> OooO0o0
    1:1:java.lang.String toAsciiString(byte[]):294:294 -> OooO0oO
org.apache.commons.codec.binary.Hex -> org.apache.commons.codec.binary.OooOo00:
    char[] DIGITS_LOWER -> OooO0OO
    char[] DIGITS_UPPER -> OooO0Oo
    java.lang.String DEFAULT_CHARSET_NAME -> OooO0O0
    java.lang.String charsetName -> OooO00o
    1:6:void <clinit>():48:53 -> <clinit>
    1:3:void <init>():177:179 -> <init>
    4:5:void <init>(java.lang.String):189:190 -> <init>
    1:15:byte[] decodeHex(char[]):68:82 -> OooO00o
    16:16:byte[] decodeHex(char[]):71:71 -> OooO00o
    17:17:char[] encodeHex(byte[],boolean):114:114 -> OooO00o
    18:23:char[] encodeHex(byte[],char[]):130:135 -> OooO00o
    24:26:int toDigit(char,int):165:167 -> OooO00o
    27:29:byte[] decode(byte[]):207:209 -> OooO00o
    30:35:java.lang.Object encode(java.lang.Object):274:279 -> OooO00o
    36:36:java.lang.Object encode(java.lang.Object):277:277 -> OooO00o
    37:37:java.lang.String getCharsetName():290:290 -> OooO00o
    1:4:java.lang.Object decode(java.lang.Object):228:231 -> OooO0O0
    5:5:byte[] encode(byte[]):253:253 -> OooO0O0
    1:1:char[] encodeHex(byte[]):98:98 -> OooO0OO
    1:1:java.lang.String encodeHexString(byte[]):150:150 -> OooO0Oo
    1:1:java.lang.String toString():300:300 -> toString
org.apache.commons.codec.binary.StringUtils -> org.apache.commons.codec.binary.OooOo:
    1:1:void <init>():34:34 -> <init>
    1:1:byte[] getBytesIso8859_1(java.lang.String):49:49 -> OooO00o
    2:4:byte[] getBytesUnchecked(java.lang.String,java.lang.String):156:158 -> OooO00o
    5:5:java.lang.IllegalStateException newIllegalStateException(java.lang.String,java.io.UnsupportedEncodingException):163:163 -> OooO00o
    6:8:java.lang.String newString(byte[],java.lang.String):190:192 -> OooO00o
    9:9:java.lang.String newStringIso8859_1(byte[]):208:208 -> OooO00o
    1:1:byte[] getBytesUsAscii(java.lang.String):65:65 -> OooO0O0
    2:2:java.lang.String newStringUsAscii(byte[]):223:223 -> OooO0O0
    1:1:byte[] getBytesUtf16(java.lang.String):81:81 -> OooO0OO
    2:2:java.lang.String newStringUtf16(byte[]):238:238 -> OooO0OO
    1:1:byte[] getBytesUtf16Be(java.lang.String):97:97 -> OooO0Oo
    2:2:java.lang.String newStringUtf16Be(byte[]):253:253 -> OooO0Oo
    1:1:byte[] getBytesUtf8(java.lang.String):129:129 -> OooO0o
    2:2:java.lang.String newStringUtf8(byte[]):283:283 -> OooO0o
    1:1:byte[] getBytesUtf16Le(java.lang.String):113:113 -> OooO0o0
    2:2:java.lang.String newStringUtf16Le(byte[]):268:268 -> OooO0o0
org.apache.commons.codec.digest.DigestUtils -> org.apache.commons.codec.digest.OooO00o:
    int STREAM_BUFFER_LENGTH -> OooO00o
    1:1:void <init>():34:34 -> <init>
    1:1:java.lang.String sha384Hex(java.lang.String):450:450 -> OooO
    2:2:java.lang.String sha512Hex(byte[]):512:512 -> OooO
    3:3:java.lang.String sha512Hex(java.io.InputStream):529:529 -> OooO
    1:9:byte[] digest(java.security.MessageDigest,java.io.InputStream):50:58 -> OooO00o
    10:10:byte[] getBytesUtf8(java.lang.String):69:69 -> OooO00o
    11:11:java.security.MessageDigest getMd5Digest():101:101 -> OooO00o
    12:12:byte[] md5(byte[]):165:165 -> OooO00o
    13:13:byte[] md5(java.io.InputStream):179:179 -> OooO00o
    1:3:java.security.MessageDigest getDigest(java.lang.String):87:89 -> OooO0O0
    4:4:java.security.MessageDigest getSha256Digest():115:115 -> OooO0O0
    5:5:java.lang.String md5Hex(byte[]):201:201 -> OooO0O0
    6:6:java.lang.String md5Hex(java.io.InputStream):215:215 -> OooO0O0
    1:1:java.security.MessageDigest getSha384Digest():129:129 -> OooO0OO
    2:2:byte[] md5(java.lang.String):190:190 -> OooO0OO
    3:3:byte[] sha(byte[]):237:237 -> OooO0OO
    4:4:byte[] sha(java.io.InputStream):251:251 -> OooO0OO
    1:1:java.security.MessageDigest getSha512Digest():143:143 -> OooO0Oo
    2:2:java.lang.String md5Hex(java.lang.String):226:226 -> OooO0Oo
    3:3:byte[] sha256(byte[]):277:277 -> OooO0Oo
    4:4:byte[] sha256(java.io.InputStream):294:294 -> OooO0Oo
    1:1:byte[] sha256(java.lang.String):309:309 -> OooO0o
    2:2:byte[] sha384(byte[]):371:371 -> OooO0o
    3:3:byte[] sha384(java.io.InputStream):388:388 -> OooO0o
    1:1:java.security.MessageDigest getShaDigest():154:154 -> OooO0o0
    2:2:byte[] sha(java.lang.String):262:262 -> OooO0o0
    3:3:java.lang.String sha256Hex(byte[]):324:324 -> OooO0o0
    4:4:java.lang.String sha256Hex(java.io.InputStream):341:341 -> OooO0o0
    1:1:java.lang.String sha256Hex(java.lang.String):356:356 -> OooO0oO
    2:2:java.lang.String sha384Hex(byte[]):418:418 -> OooO0oO
    3:3:java.lang.String sha384Hex(java.io.InputStream):435:435 -> OooO0oO
    1:1:byte[] sha384(java.lang.String):403:403 -> OooO0oo
    2:2:byte[] sha512(byte[]):465:465 -> OooO0oo
    3:3:byte[] sha512(java.io.InputStream):482:482 -> OooO0oo
    1:1:byte[] sha512(java.lang.String):497:497 -> OooOO0
    2:2:java.lang.String shaHex(byte[]):555:555 -> OooOO0
    3:3:java.lang.String shaHex(java.io.InputStream):569:569 -> OooOO0
    1:1:java.lang.String sha512Hex(java.lang.String):544:544 -> OooOO0O
    1:1:java.lang.String shaHex(java.lang.String):580:580 -> OooOO0o
org.apache.commons.codec.language.AbstractCaverphone -> org.apache.commons.codec.language.OooO00o:
    1:1:void <init>():40:40 -> <init>
    1:4:java.lang.Object encode(java.lang.Object):55:58 -> OooO00o
    5:5:java.lang.Object encode(java.lang.Object):56:56 -> OooO00o
    6:6:boolean isEncodeEqual(java.lang.String,java.lang.String):74:74 -> OooO00o
org.apache.commons.codec.language.Caverphone -> org.apache.commons.codec.language.OooO0o:
    org.apache.commons.codec.language.Caverphone2 encoder -> OooO00o
    1:1:void <init>():47:47 -> <init>
    2:2:void <init>():41:41 -> <init>
    1:1:java.lang.String caverphone(java.lang.String):58:58 -> OooO00o
    2:5:java.lang.Object encode(java.lang.Object):73:76 -> OooO00o
    6:6:java.lang.Object encode(java.lang.Object):74:74 -> OooO00o
    7:7:boolean isCaverphoneEqual(java.lang.String,java.lang.String):100:100 -> OooO00o
    1:1:java.lang.String encode(java.lang.String):87:87 -> OooO0O0
org.apache.commons.codec.language.Caverphone1 -> org.apache.commons.codec.language.OooO0O0:
    java.lang.String SIX_1 -> OooO00o
    1:1:void <init>():32:32 -> <init>
    1:78:java.lang.String encode(java.lang.String):45:122 -> OooO0O0
    79:79:java.lang.String encode(java.lang.String):46:46 -> OooO0O0
org.apache.commons.codec.language.Caverphone2 -> org.apache.commons.codec.language.OooO0OO:
    java.lang.String TEN_1 -> OooO00o
    1:1:void <init>():32:32 -> <init>
    1:81:java.lang.String encode(java.lang.String):45:125 -> OooO0O0
    82:82:java.lang.String encode(java.lang.String):46:46 -> OooO0O0
org.apache.commons.codec.language.ColognePhonetic -> org.apache.commons.codec.language.OooO:
    char[][] PREPROCESS_MAP -> OooO00o
    1:1:void <clinit>():274:274 -> <clinit>
    1:1:void <init>():183:183 -> <init>
    1:1:boolean arrayContains(char[],char):285:285 -> OooO00o
    2:80:java.lang.String colognePhonetic(java.lang.String):309:387 -> OooO00o
    81:88:java.lang.Object encode(java.lang.Object):391:398 -> OooO00o
    89:89:java.lang.Object encode(java.lang.Object):392:392 -> OooO00o
    90:90:boolean isEncodeEqual(java.lang.String,java.lang.String):406:406 -> OooO00o
    1:1:java.lang.String encode(java.lang.String):402:402 -> OooO0O0
    1:15:java.lang.String preprocess(java.lang.String):413:427 -> OooO0OO
org.apache.commons.codec.language.ColognePhonetic$CologneBuffer -> org.apache.commons.codec.language.OooO$OooO00o:
    org.apache.commons.codec.language.ColognePhonetic this$0 -> OooO0OO
    int length -> OooO0O0
    char[] data -> OooO00o
    1:1:void <init>(org.apache.commons.codec.language.ColognePhonetic,char[]):191:191 -> <init>
    2:6:void <init>(org.apache.commons.codec.language.ColognePhonetic,char[]):189:193 -> <init>
    7:7:void <init>(org.apache.commons.codec.language.ColognePhonetic,int):196:196 -> <init>
    8:17:void <init>(org.apache.commons.codec.language.ColognePhonetic,int):189:198 -> <init>
    char[] copyData(int,int) -> OooO00o
    1:1:int length():204:204 -> OooO00o
    1:1:java.lang.String toString():209:209 -> toString
org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer -> org.apache.commons.codec.language.OooO$OooO0O0:
    org.apache.commons.codec.language.ColognePhonetic this$0 -> OooO0Oo
    1:2:void <init>(org.apache.commons.codec.language.ColognePhonetic,char[]):234:235 -> <init>
    1:2:void addLeft(char):239:240 -> OooO00o
    3:4:char[] copyData(int,int):245:246 -> OooO00o
    1:1:char getNextChar():251:251 -> OooO0O0
    1:1:int getNextPos():255:255 -> OooO0OO
    1:2:char removeNext():259:260 -> OooO0Oo
org.apache.commons.codec.language.ColognePhonetic$CologneOutputBuffer -> org.apache.commons.codec.language.OooO$OooO0OO:
    org.apache.commons.codec.language.ColognePhonetic this$0 -> OooO0Oo
    1:2:void <init>(org.apache.commons.codec.language.ColognePhonetic,int):215:216 -> <init>
    1:2:void addRight(char):220:221 -> OooO00o
    3:4:char[] copyData(int,int):226:227 -> OooO00o
org.apache.commons.codec.language.DoubleMetaphone -> org.apache.commons.codec.language.OooOO0:
    java.lang.String[] SILENT_START -> OooO0OO
    java.lang.String[] L_R_N_M_B_H_F_V_W_SPACE -> OooO0Oo
    java.lang.String[] ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER -> OooO0o0
    java.lang.String[] L_T_K_S_N_M_B_Z -> OooO0o
    int maxCodeLen -> OooO00o
    java.lang.String VOWELS -> OooO0O0
    1:7:void <clinit>():47:53 -> <clinit>
    1:1:void <init>():65:65 -> <init>
    2:2:void <init>():59:59 -> <init>
    1:22:int handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int):670:691 -> OooO
    1:96:java.lang.String doubleMetaphone(java.lang.String,boolean):87:182 -> OooO00o
    97:97:java.lang.String doubleMetaphone(java.lang.String,boolean):179:179 -> OooO00o
    98:98:java.lang.String doubleMetaphone(java.lang.String,boolean):176:176 -> OooO00o
    99:100:java.lang.String doubleMetaphone(java.lang.String,boolean):172:173 -> OooO00o
    101:101:java.lang.String doubleMetaphone(java.lang.String,boolean):169:169 -> OooO00o
    102:102:java.lang.String doubleMetaphone(java.lang.String,boolean):166:166 -> OooO00o
    103:103:java.lang.String doubleMetaphone(java.lang.String,boolean):163:163 -> OooO00o
    104:105:java.lang.String doubleMetaphone(java.lang.String,boolean):159:160 -> OooO00o
    106:106:java.lang.String doubleMetaphone(java.lang.String,boolean):156:156 -> OooO00o
    107:108:java.lang.String doubleMetaphone(java.lang.String,boolean):147:148 -> OooO00o
    109:110:java.lang.String doubleMetaphone(java.lang.String,boolean):143:144 -> OooO00o
    111:111:java.lang.String doubleMetaphone(java.lang.String,boolean):140:140 -> OooO00o
    112:113:java.lang.String doubleMetaphone(java.lang.String,boolean):136:137 -> OooO00o
    114:114:java.lang.String doubleMetaphone(java.lang.String,boolean):133:133 -> OooO00o
    115:115:java.lang.String doubleMetaphone(java.lang.String,boolean):130:130 -> OooO00o
    116:116:java.lang.String doubleMetaphone(java.lang.String,boolean):127:127 -> OooO00o
    117:118:java.lang.String doubleMetaphone(java.lang.String,boolean):123:124 -> OooO00o
    119:119:java.lang.String doubleMetaphone(java.lang.String,boolean):120:120 -> OooO00o
    120:120:java.lang.String doubleMetaphone(java.lang.String,boolean):117:117 -> OooO00o
    121:122:java.lang.String doubleMetaphone(java.lang.String,boolean):108:109 -> OooO00o
    123:170:java.lang.String doubleMetaphone(java.lang.String,boolean):105:152 -> OooO00o
    171:248:java.lang.String doubleMetaphone(java.lang.String,boolean):113:190 -> OooO00o
    249:252:java.lang.Object encode(java.lang.Object):202:205 -> OooO00o
    253:253:java.lang.Object encode(java.lang.Object):203:203 -> OooO00o
    254:254:boolean isDoubleMetaphoneEqual(java.lang.String,java.lang.String):229:229 -> OooO00o
    255:255:boolean isDoubleMetaphoneEqual(java.lang.String,java.lang.String,boolean):245:245 -> OooO00o
    256:256:int getMaxCodeLen():254:254 -> OooO00o
    257:257:void setMaxCodeLen(int):262:262 -> OooO00o
    258:258:int handleAEIOUY(org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int):273:273 -> OooO00o
    259:296:int handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int):284:321 -> OooO00o
    297:341:int handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean):422:466 -> OooO00o
    342:348:int handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean):452:458 -> OooO00o
    349:349:int handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean):454:454 -> OooO00o
    350:350:boolean isVowel(char):898:898 -> OooO00o
    351:355:java.lang.String cleanInput(java.lang.String):924:928 -> OooO00o
    356:359:char charAt(java.lang.String,int):937:940 -> OooO00o
    360:360:boolean contains(java.lang.String,int,int,java.lang.String):948:948 -> OooO00o
    361:361:boolean contains(java.lang.String,int,int,java.lang.String,java.lang.String):957:957 -> OooO00o
    362:362:boolean contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String):967:967 -> OooO00o
    363:363:boolean contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String):977:977 -> OooO00o
    364:364:boolean contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):989:989 -> OooO00o
    365:365:boolean contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):1001:1001 -> OooO00o
    366:370:boolean contains(java.lang.String,int,int,java.lang.String[]):1013:1017 -> OooO00o
    1:1:java.lang.String encode(java.lang.String):215:215 -> OooO0O0
    2:15:int handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int):338:351 -> OooO0O0
    16:37:int handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean):528:549 -> OooO0O0
    38:42:int handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean):530:534 -> OooO0O0
    43:43:int handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean):532:532 -> OooO0O0
    44:54:boolean conditionC0(java.lang.String,int):812:822 -> OooO0O0
    1:1:java.lang.String doubleMetaphone(java.lang.String):75:75 -> OooO0OO
    2:21:int handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int):364:383 -> OooO0OO
    22:29:int handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean):601:608 -> OooO0OO
    30:33:boolean conditionCH0(java.lang.String,int):833:836 -> OooO0OO
    1:15:int handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int):395:409 -> OooO0Oo
    16:57:int handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean):618:659 -> OooO0Oo
    58:60:int handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean):637:639 -> OooO0Oo
    61:61:boolean conditionCH1(java.lang.String,int):847:847 -> OooO0Oo
    62:63:boolean isSilentStart(java.lang.String):908:909 -> OooO0Oo
    1:3:int handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int):512:514 -> OooO0o
    4:7:boolean conditionM0(java.lang.String,int):875:878 -> OooO0o
    1:22:int handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int):477:498 -> OooO0o0
    23:31:int handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean):791:799 -> OooO0o0
    32:36:int handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean):797:801 -> OooO0o0
    37:40:boolean conditionL0(java.lang.String,int):859:862 -> OooO0o0
    41:41:boolean isSlavoGermanic(java.lang.String):890:890 -> OooO0o0
    1:10:int handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int):564:573 -> OooO0oO
    1:6:int handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int):584:589 -> OooO0oo
    1:20:int handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int):702:721 -> OooOO0
    21:27:int handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int):710:716 -> OooOO0
    28:28:int handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int):714:714 -> OooOO0
    1:25:int handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int):732:756 -> OooOO0O
    26:26:int handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int):752:752 -> OooOO0O
    1:10:int handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int):772:781 -> OooOO0o
org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult -> org.apache.commons.codec.language.OooOO0$OooO00o:
    int maxLength -> OooO0OO
    org.apache.commons.codec.language.DoubleMetaphone this$0 -> OooO0Oo
    java.lang.StringBuffer alternate -> OooO0O0
    java.lang.StringBuffer primary -> OooO00o
    1:1:void <init>(org.apache.commons.codec.language.DoubleMetaphone,int):1038:1038 -> <init>
    2:7:void <init>(org.apache.commons.codec.language.DoubleMetaphone,int):1034:1039 -> <init>
    1:2:void append(char):1043:1044 -> OooO00o
    3:4:void append(char,char):1048:1049 -> OooO00o
    5:6:void append(java.lang.String):1065:1066 -> OooO00o
    7:8:void append(java.lang.String,java.lang.String):1070:1071 -> OooO00o
    9:9:java.lang.String getAlternate():1097:1097 -> OooO00o
    1:2:void appendAlternate(char):1059:1060 -> OooO0O0
    3:7:void appendAlternate(java.lang.String):1084:1088 -> OooO0O0
    8:8:java.lang.String getPrimary():1093:1093 -> OooO0O0
    1:2:void appendPrimary(char):1053:1054 -> OooO0OO
    3:7:void appendPrimary(java.lang.String):1075:1079 -> OooO0OO
    8:8:boolean isComplete():1101:1101 -> OooO0OO
org.apache.commons.codec.language.Metaphone -> org.apache.commons.codec.language.OooOO0O:
    int maxCodeLen -> OooO00o
    java.lang.String VOWELS -> OooO0O0
    java.lang.String FRONTV -> OooO0OO
    java.lang.String VARSON -> OooO0Oo
    1:1:void <init>():69:69 -> <init>
    2:2:void <init>():63:63 -> <init>
    boolean isLastChar(int,int) -> OooO00o
    1:48:java.lang.String metaphone(java.lang.String):84:131 -> OooO00o
    49:50:java.lang.String metaphone(java.lang.String):127:128 -> OooO00o
    51:59:java.lang.String metaphone(java.lang.String):115:123 -> OooO00o
    60:265:java.lang.String metaphone(java.lang.String):101:306 -> OooO00o
    266:266:java.lang.String metaphone(java.lang.String):303:303 -> OooO00o
    267:269:java.lang.String metaphone(java.lang.String):297:299 -> OooO00o
    270:270:java.lang.String metaphone(java.lang.String):295:295 -> OooO00o
    271:284:java.lang.String metaphone(java.lang.String):278:291 -> OooO00o
    285:285:java.lang.String metaphone(java.lang.String):280:280 -> OooO00o
    286:291:java.lang.String metaphone(java.lang.String):269:274 -> OooO00o
    292:292:java.lang.String metaphone(java.lang.String):272:272 -> OooO00o
    293:293:java.lang.String metaphone(java.lang.String):266:266 -> OooO00o
    294:298:java.lang.String metaphone(java.lang.String):258:262 -> OooO00o
    299:303:java.lang.String metaphone(java.lang.String):250:254 -> OooO00o
    304:312:java.lang.String metaphone(java.lang.String):229:237 -> OooO00o
    313:359:java.lang.String metaphone(java.lang.String):200:246 -> OooO00o
    360:365:java.lang.String metaphone(java.lang.String):191:196 -> OooO00o
    366:394:java.lang.String metaphone(java.lang.String):159:187 -> OooO00o
    395:399:java.lang.String metaphone(java.lang.String):151:155 -> OooO00o
    400:567:java.lang.String metaphone(java.lang.String):147:314 -> OooO00o
    568:568:java.lang.String metaphone(java.lang.String):85:85 -> OooO00o
    569:569:boolean isVowel(java.lang.StringBuffer,int):318:318 -> OooO00o
    570:572:boolean isNextChar(java.lang.StringBuffer,int,char):332:334 -> OooO00o
    573:576:boolean regionMatch(java.lang.StringBuffer,int,java.lang.String):341:344 -> OooO00o
    577:580:java.lang.Object encode(java.lang.Object):367:370 -> OooO00o
    581:581:java.lang.Object encode(java.lang.Object):368:368 -> OooO00o
    582:582:boolean isMetaphoneEqual(java.lang.String,java.lang.String):392:392 -> OooO00o
    583:583:int getMaxCodeLen():399:399 -> OooO00o
    584:584:void setMaxCodeLen(int):405:405 -> OooO00o
    1:3:boolean isPreviousChar(java.lang.StringBuffer,int,char):323:325 -> OooO0O0
    4:4:java.lang.String encode(java.lang.String):380:380 -> OooO0O0
org.apache.commons.codec.language.RefinedSoundex -> org.apache.commons.codec.language.OooOOO0:
    org.apache.commons.codec.language.RefinedSoundex US_ENGLISH -> OooO0Oo
    char[] soundexMapping -> OooO00o
    char[] US_ENGLISH_MAPPING -> OooO0OO
    java.lang.String US_ENGLISH_MAPPING_STRING -> OooO0O0
    1:14:void <clinit>():43:56 -> <clinit>
    1:2:void <init>():62:63 -> <init>
    3:5:void <init>(char[]):75:77 -> <init>
    6:7:void <init>(java.lang.String):88:89 -> <init>
    1:1:int difference(java.lang.String,java.lang.String):115:115 -> OooO00o
    2:5:java.lang.Object encode(java.lang.Object):132:135 -> OooO00o
    6:6:java.lang.Object encode(java.lang.Object):133:133 -> OooO00o
    7:10:char getMappingCode(char):159:162 -> OooO00o
    11:35:java.lang.String soundex(java.lang.String):176:200 -> OooO00o
    1:1:java.lang.String encode(java.lang.String):146:146 -> OooO0O0
org.apache.commons.codec.language.Soundex -> org.apache.commons.codec.language.OooOOO:
    org.apache.commons.codec.language.Soundex US_ENGLISH -> OooO0o0
    char[] soundexMapping -> OooO0O0
    char[] US_ENGLISH_MAPPING -> OooO0Oo
    int maxLength -> OooO00o
    java.lang.String US_ENGLISH_MAPPING_STRING -> OooO0OO
    1:8:void <clinit>():50:57 -> <clinit>
    1:1:void <init>():78:78 -> <init>
    2:17:void <init>():64:79 -> <init>
    18:18:void <init>(char[]):92:92 -> <init>
    19:49:void <init>(char[]):64:94 -> <init>
    50:50:void <init>(java.lang.String):105:105 -> <init>
    51:93:void <init>(java.lang.String):64:106 -> <init>
    1:1:int difference(java.lang.String,java.lang.String):129:129 -> OooO00o
    2:5:java.lang.Object encode(java.lang.Object):146:149 -> OooO00o
    6:6:java.lang.Object encode(java.lang.Object):147:147 -> OooO00o
    7:13:char getMappingCode(java.lang.String,int):180:186 -> OooO00o
    14:14:int getMaxLength():202:202 -> OooO00o
    15:18:char map(char):225:228 -> OooO00o
    19:19:char map(char):226:226 -> OooO00o
    20:20:void setMaxLength(int):239:239 -> OooO00o
    21:40:java.lang.String soundex(java.lang.String):255:274 -> OooO00o
    1:1:java.lang.String encode(java.lang.String):162:162 -> OooO0O0
    2:2:char[] getSoundexMapping():211:211 -> OooO0O0
org.apache.commons.codec.language.SoundexUtils -> org.apache.commons.codec.language.OooOOOO:
    1:1:void <init>():30:30 -> <init>
    1:15:java.lang.String clean(java.lang.String):41:55 -> OooO00o
    16:16:int difference(org.apache.commons.codec.StringEncoder,java.lang.String,java.lang.String):85:85 -> OooO00o
    17:20:int differenceEncoded(java.lang.String,java.lang.String):113:116 -> OooO00o
org.apache.commons.codec.language.bm.BeiderMorseEncoder -> org.apache.commons.codec.language.bm.OooO00o:
    org.apache.commons.codec.language.bm.PhoneticEngine engine -> OooO00o
    1:6:void <init>():80:85 -> <init>
    1:4:java.lang.Object encode(java.lang.Object):88:91 -> OooO00o
    5:5:java.lang.Object encode(java.lang.Object):89:89 -> OooO00o
    6:6:org.apache.commons.codec.language.bm.NameType getNameType():107:107 -> OooO00o
    7:7:void setConcat(boolean):135:135 -> OooO00o
    8:8:void setNameType(org.apache.commons.codec.language.bm.NameType):146:146 -> OooO00o
    9:9:void setRuleType(org.apache.commons.codec.language.bm.RuleType):156:156 -> OooO00o
    1:1:java.lang.String encode(java.lang.String):98:98 -> OooO0O0
    2:2:org.apache.commons.codec.language.bm.RuleType getRuleType():116:116 -> OooO0O0
    1:1:boolean isConcat():125:125 -> OooO0OO
org.apache.commons.codec.language.bm.Lang -> org.apache.commons.codec.language.bm.OooO0O0:
    java.util.List rules -> OooO0O0
    java.util.Map Langs -> OooO0OO
    org.apache.commons.codec.language.bm.Languages languages -> OooO00o
    java.lang.String LANGUAGE_RULES_RN -> OooO0Oo
    1:7:void <clinit>():98:104 -> <clinit>
    1:3:void <init>(java.util.List,org.apache.commons.codec.language.bm.Languages):197:199 -> <init>
    1:1:org.apache.commons.codec.language.bm.Lang instance(org.apache.commons.codec.language.bm.NameType):116:116 -> OooO00o
    2:58:org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages):135:191 -> OooO00o
    59:59:org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages):139:139 -> OooO00o
    60:61:java.lang.String guessLanguage(java.lang.String):210:211 -> OooO00o
    1:22:org.apache.commons.codec.language.bm.Languages$LanguageSet guessLanguages(java.lang.String):222:243 -> OooO0O0
org.apache.commons.codec.language.bm.Lang$1 -> org.apache.commons.codec.language.bm.OooO0O0$OooO00o:
org.apache.commons.codec.language.bm.Lang$LangRule -> org.apache.commons.codec.language.bm.OooO0O0$OooO0O0:
    java.util.regex.Pattern pattern -> OooO0OO
    java.util.Set languages -> OooO0O0
    boolean acceptOnMatch -> OooO00o
    1:1:void <init>(java.util.regex.Pattern,java.util.Set,boolean,org.apache.commons.codec.language.bm.Lang$1):82:82 -> <init>
    2:5:void <init>(java.util.regex.Pattern,java.util.Set,boolean):87:90 -> <init>
    1:1:boolean access$100(org.apache.commons.codec.language.bm.Lang$LangRule):82:82 -> OooO00o
    2:2:boolean matches(java.lang.String):94:94 -> OooO00o
    1:1:java.util.Set access$200(org.apache.commons.codec.language.bm.Lang$LangRule):82:82 -> OooO0O0
org.apache.commons.codec.language.bm.Languages -> org.apache.commons.codec.language.bm.OooO0OO:
    org.apache.commons.codec.language.bm.Languages$LanguageSet ANY_LANGUAGE -> OooO0o0
    java.util.Set languages -> OooO00o
    java.util.Map LANGUAGES -> OooO0OO
    org.apache.commons.codec.language.bm.Languages$LanguageSet NO_LANGUAGES -> OooO0Oo
    java.lang.String ANY -> OooO0O0
    1:90:void <clinit>():141:230 -> <clinit>
    1:2:void <init>(java.util.Set):262:263 -> <init>
    1:1:org.apache.commons.codec.language.bm.Languages getInstance(org.apache.commons.codec.language.bm.NameType):150:150 -> OooO00o
    2:30:org.apache.commons.codec.language.bm.Languages getInstance(java.lang.String):155:183 -> OooO00o
    31:31:org.apache.commons.codec.language.bm.Languages getInstance(java.lang.String):159:159 -> OooO00o
    32:32:java.util.Set getLanguages():267:267 -> OooO00o
    1:1:java.lang.String langResourceName(org.apache.commons.codec.language.bm.NameType):187:187 -> OooO0O0
org.apache.commons.codec.language.bm.Languages$1 -> org.apache.commons.codec.language.bm.OooO0OO$OooO00o:
    1:1:void <init>():195:195 -> <init>
    boolean contains(java.lang.String) -> OooO00o
    org.apache.commons.codec.language.bm.Languages$LanguageSet restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet) -> OooO00o
    1:1:java.lang.String getAny():203:203 -> OooO00o
    boolean isEmpty() -> OooO0O0
    boolean isSingleton() -> OooO0OO
    1:1:java.lang.String toString():223:223 -> toString
org.apache.commons.codec.language.bm.Languages$2 -> org.apache.commons.codec.language.bm.OooO0OO$OooO0O0:
    1:1:void <init>():230:230 -> <init>
    boolean contains(java.lang.String) -> OooO00o
    org.apache.commons.codec.language.bm.Languages$LanguageSet restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet) -> OooO00o
    1:1:java.lang.String getAny():238:238 -> OooO00o
    boolean isEmpty() -> OooO0O0
    boolean isSingleton() -> OooO0OO
    1:1:java.lang.String toString():258:258 -> toString
org.apache.commons.codec.language.bm.Languages$LanguageSet -> org.apache.commons.codec.language.bm.OooO0OO$OooO0OO:
    1:1:void <init>():63:63 -> <init>
    boolean contains(java.lang.String) -> OooO00o
    java.lang.String getAny() -> OooO00o
    org.apache.commons.codec.language.bm.Languages$LanguageSet restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet) -> OooO00o
    1:1:org.apache.commons.codec.language.bm.Languages$LanguageSet from(java.util.Set):66:66 -> OooO00o
    boolean isEmpty() -> OooO0O0
    boolean isSingleton() -> OooO0OO
org.apache.commons.codec.language.bm.Languages$SomeLanguages -> org.apache.commons.codec.language.bm.OooO0OO$OooO0o:
    java.util.Set languages -> OooO00o
    1:1:void <init>(java.util.Set,org.apache.commons.codec.language.bm.Languages$1):83:83 -> <init>
    2:3:void <init>(java.util.Set):86:87 -> <init>
    1:1:boolean contains(java.lang.String):92:92 -> OooO00o
    2:2:java.lang.String getAny():97:97 -> OooO00o
    3:14:org.apache.commons.codec.language.bm.Languages$LanguageSet restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet):116:127 -> OooO00o
    1:1:boolean isEmpty():106:106 -> OooO0O0
    1:1:boolean isSingleton():111:111 -> OooO0OO
    1:1:java.util.Set getLanguages():101:101 -> OooO0Oo
    1:1:java.lang.String toString():134:134 -> toString
org.apache.commons.codec.language.bm.NameType -> org.apache.commons.codec.language.bm.NameType:
    org.apache.commons.codec.language.bm.NameType[] $VALUES -> OooO00o
    1:7:void <clinit>():31:37 -> <clinit>
    8:8:void <clinit>():28:28 -> <clinit>
    1:2:void <init>(java.lang.String,int,java.lang.String):41:42 -> <init>
    1:1:java.lang.String getName():51:51 -> getName
    1:1:org.apache.commons.codec.language.bm.NameType valueOf(java.lang.String):28:28 -> valueOf
    1:1:org.apache.commons.codec.language.bm.NameType[] values():28:28 -> values
org.apache.commons.codec.language.bm.PhoneticEngine -> org.apache.commons.codec.language.bm.OooO0o:
    org.apache.commons.codec.language.bm.RuleType ruleType -> OooO0OO
    org.apache.commons.codec.language.bm.Lang lang -> OooO00o
    org.apache.commons.codec.language.bm.NameType nameType -> OooO0O0
    java.util.Map NAME_PREFIXES -> OooO0o0
    boolean concat -> OooO0Oo
    1:8:void <clinit>():229:236 -> <clinit>
    1:8:void <init>(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,boolean):310:317 -> <init>
    9:9:void <init>(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,boolean):312:312 -> <init>
    1:2:java.lang.CharSequence cacheSubSequence(java.lang.CharSequence):248:249 -> OooO00o
    3:12:java.lang.String join(java.lang.Iterable,java.lang.String):280:289 -> OooO00o
    13:44:org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.List):332:363 -> OooO00o
    45:45:org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.List):330:330 -> OooO00o
    46:47:java.lang.String encode(java.lang.String):374:375 -> OooO00o
    48:99:java.lang.String encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet):387:438 -> OooO00o
    100:101:java.lang.String encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet):431:432 -> OooO00o
    102:152:java.lang.String encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet):423:473 -> OooO00o
    153:158:java.lang.String encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet):449:454 -> OooO00o
    159:159:org.apache.commons.codec.language.bm.Lang getLang():482:482 -> OooO00o
    1:1:org.apache.commons.codec.language.bm.NameType getNameType():491:491 -> OooO0O0
    1:1:org.apache.commons.codec.language.bm.RuleType getRuleType():500:500 -> OooO0OO
    1:1:boolean isConcat():509:509 -> OooO0Oo
org.apache.commons.codec.language.bm.PhoneticEngine$1 -> org.apache.commons.codec.language.bm.OooO0o$OooO00o:
    java.lang.CharSequence val$cached -> OooO00o
    java.lang.CharSequence[][] val$cache -> OooO0O0
    1:1:void <init>(java.lang.CharSequence,java.lang.CharSequence[][]):249:249 -> <init>
    1:1:char charAt(int):251:251 -> charAt
    1:1:int length():255:255 -> length
    1:7:java.lang.CharSequence subSequence(int,int):260:266 -> subSequence
org.apache.commons.codec.language.bm.PhoneticEngine$2 -> org.apache.commons.codec.language.bm.OooO0o$OooO0O0:
    int[] $SwitchMap$org$apache$commons$codec$language$bm$NameType -> OooO00o
    1:1:void <clinit>():421:421 -> <clinit>
org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder -> org.apache.commons.codec.language.bm.OooO0o$OooO0OO:
    java.util.Set phonemes -> OooO00o
    1:1:void <init>(java.util.Set,org.apache.commons.codec.language.bm.PhoneticEngine$1):61:61 -> <init>
    2:3:void <init>(java.util.Set):77:78 -> <init>
    1:1:org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder empty(org.apache.commons.codec.language.bm.Languages$LanguageSet):72:72 -> OooO00o
    2:8:org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder append(java.lang.CharSequence):88:94 -> OooO00o
    9:20:org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr):108:119 -> OooO00o
    21:21:java.util.Set getPhonemes():128:128 -> OooO00o
    1:11:java.lang.String makeString():140:150 -> OooO0O0
org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication -> org.apache.commons.codec.language.bm.OooO0o$OooO0o:
    java.lang.CharSequence input -> OooO0O0
    boolean found -> OooO0o0
    int i -> OooO0Oo
    java.util.List finalRules -> OooO00o
    org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder phonemeBuilder -> OooO0OO
    1:8:void <init>(java.util.List,java.lang.CharSequence,org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,int):173:180 -> <init>
    9:9:void <init>(java.util.List,java.lang.CharSequence,org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,int):175:175 -> <init>
    1:1:int getI():184:184 -> OooO00o
    1:1:org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder getPhonemeBuilder():188:188 -> OooO0O0
    1:22:org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication invoke():199:220 -> OooO0OO
    1:1:boolean isFound():225:225 -> OooO0Oo
org.apache.commons.codec.language.bm.ResourceConstants -> org.apache.commons.codec.language.bm.OooO:
    java.lang.String ENCODING -> OooO0O0
    java.lang.String EXT_CMT_END -> OooO0OO
    java.lang.String EXT_CMT_START -> OooO0Oo
    java.lang.String CMT -> OooO00o
    1:1:void <init>():26:26 -> <init>
org.apache.commons.codec.language.bm.Rule -> org.apache.commons.codec.language.bm.OooOO0:
    org.apache.commons.codec.language.bm.Rule$PhonemeExpr phoneme -> OooO0OO
    java.lang.String ALL -> OooO0o
    java.util.Map RULES -> OooO
    org.apache.commons.codec.language.bm.Rule$RPattern lContext -> OooO00o
    java.lang.String pattern -> OooO0O0
    java.lang.String DOUBLE_QUOTE -> OooO0oO
    java.lang.String HASH_INCLUDE -> OooO0oo
    org.apache.commons.codec.language.bm.Rule$RPattern rContext -> OooO0Oo
    org.apache.commons.codec.language.bm.Rule$RPattern ALL_STRINGS_RMATCHER -> OooO0o0
    1:38:void <clinit>():157:194 -> <clinit>
    1:5:void <init>(java.lang.String,java.lang.String,java.lang.String,org.apache.commons.codec.language.bm.Rule$PhonemeExpr):542:546 -> <init>
    1:1:boolean access$100(java.lang.CharSequence,java.lang.CharSequence):82:82 -> OooO00o
    2:2:boolean access$300(java.lang.CharSequence,char):82:82 -> OooO00o
    3:3:java.lang.String createResourceName(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String):208:208 -> OooO00o
    4:11:java.util.Scanner createScanner(java.lang.String):223:230 -> OooO00o
    12:12:java.util.Scanner createScanner(java.lang.String):227:227 -> OooO00o
    13:13:java.util.List getInstance(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,org.apache.commons.codec.language.bm.Languages$LanguageSet):257:257 -> OooO00o
    14:82:java.util.List parseRules(java.util.Scanner,java.lang.String):319:387 -> OooO00o
    83:83:org.apache.commons.codec.language.bm.Rule$RPattern getLContext():555:555 -> OooO00o
    84:97:boolean patternAndContextMatches(java.lang.CharSequence,int):601:614 -> OooO00o
    98:98:boolean patternAndContextMatches(java.lang.CharSequence,int):598:598 -> OooO00o
    1:1:boolean access$200(java.lang.CharSequence,java.lang.CharSequence):82:82 -> OooO0O0
    2:3:boolean contains(java.lang.CharSequence,char):199:200 -> OooO0O0
    4:11:java.util.Scanner createScanner(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String):212:219 -> OooO0O0
    12:12:java.util.Scanner createScanner(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String):216:216 -> OooO0O0
    13:22:org.apache.commons.codec.language.bm.Rule$Phoneme parsePhoneme(java.lang.String):282:291 -> OooO0O0
    23:31:org.apache.commons.codec.language.bm.Rule$Phoneme parsePhoneme(java.lang.String):285:293 -> OooO0O0
    32:32:java.lang.String getPattern():564:564 -> OooO0O0
    1:5:boolean endsWith(java.lang.CharSequence,java.lang.CharSequence):234:238 -> OooO0OO
    6:9:java.util.List getInstance(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String):272:275 -> OooO0OO
    10:24:org.apache.commons.codec.language.bm.Rule$PhonemeExpr parsePhonemeExpr(java.lang.String):298:312 -> OooO0OO
    25:39:org.apache.commons.codec.language.bm.Rule$PhonemeExpr parsePhonemeExpr(java.lang.String):300:314 -> OooO0OO
    40:40:org.apache.commons.codec.language.bm.Rule$PhonemeExpr getPhoneme():573:573 -> OooO0OO
    1:83:org.apache.commons.codec.language.bm.Rule$RPattern pattern(java.lang.String):406:488 -> OooO0Oo
    84:88:boolean startsWith(java.lang.CharSequence,java.lang.CharSequence):499:503 -> OooO0Oo
    89:89:org.apache.commons.codec.language.bm.Rule$RPattern getRContext():582:582 -> OooO0Oo
    1:6:java.lang.String stripQuotes(java.lang.String):511:516 -> OooO0o0
org.apache.commons.codec.language.bm.Rule$1 -> org.apache.commons.codec.language.bm.OooOO0$OooO0O0:
    1:1:void <init>():157:157 -> <init>
    boolean isMatch(java.lang.CharSequence) -> OooO00o
org.apache.commons.codec.language.bm.Rule$10 -> org.apache.commons.codec.language.bm.OooOO0$OooO00o:
    java.util.regex.Pattern pattern -> OooO00o
    java.lang.String val$regex -> OooO0O0
    1:2:void <init>(java.lang.String):488:489 -> <init>
    1:2:boolean isMatch(java.lang.CharSequence):492:493 -> OooO00o
org.apache.commons.codec.language.bm.Rule$2 -> org.apache.commons.codec.language.bm.OooOO0$OooO0OO:
    java.lang.String loc -> OooOO0O
    java.lang.String val$location -> OooOOO0
    int myLine -> OooOO0
    int val$cLine -> OooOO0o
    1:3:void <init>(java.lang.String,java.lang.String,java.lang.String,org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int,java.lang.String):371:373 -> <init>
    1:6:java.lang.String toString():377:382 -> toString
org.apache.commons.codec.language.bm.Rule$3 -> org.apache.commons.codec.language.bm.OooOO0$OooO0o:
    1:1:void <init>():416:416 -> <init>
    1:1:boolean isMatch(java.lang.CharSequence):418:418 -> OooO00o
org.apache.commons.codec.language.bm.Rule$4 -> org.apache.commons.codec.language.bm.OooOO0$OooO:
    java.lang.String val$content -> OooO00o
    1:1:void <init>(java.lang.String):422:422 -> <init>
    1:1:boolean isMatch(java.lang.CharSequence):424:424 -> OooO00o
org.apache.commons.codec.language.bm.Rule$5 -> org.apache.commons.codec.language.bm.OooOO0$OooOO0:
    java.lang.String val$content -> OooO00o
    1:1:void <init>(java.lang.String):433:433 -> <init>
    1:1:boolean isMatch(java.lang.CharSequence):435:435 -> OooO00o
org.apache.commons.codec.language.bm.Rule$6 -> org.apache.commons.codec.language.bm.OooOO0$OooOO0O:
    java.lang.String val$content -> OooO00o
    1:1:void <init>(java.lang.String):440:440 -> <init>
    1:1:boolean isMatch(java.lang.CharSequence):442:442 -> OooO00o
org.apache.commons.codec.language.bm.Rule$7 -> org.apache.commons.codec.language.bm.OooOO0$OooOOO0:
    boolean val$shouldMatch -> OooO0O0
    java.lang.String val$bContent -> OooO00o
    1:1:void <init>(java.lang.String,boolean):463:463 -> <init>
    1:1:boolean isMatch(java.lang.CharSequence):465:465 -> OooO00o
org.apache.commons.codec.language.bm.Rule$8 -> org.apache.commons.codec.language.bm.OooOO0$OooOOO:
    boolean val$shouldMatch -> OooO0O0
    java.lang.String val$bContent -> OooO00o
    1:1:void <init>(java.lang.String,boolean):470:470 -> <init>
    1:1:boolean isMatch(java.lang.CharSequence):472:472 -> OooO00o
org.apache.commons.codec.language.bm.Rule$9 -> org.apache.commons.codec.language.bm.OooOO0$OooOOOO:
    boolean val$shouldMatch -> OooO0O0
    java.lang.String val$bContent -> OooO00o
    1:1:void <init>(java.lang.String,boolean):477:477 -> <init>
    1:1:boolean isMatch(java.lang.CharSequence):479:479 -> OooO00o
org.apache.commons.codec.language.bm.Rule$Phoneme -> org.apache.commons.codec.language.bm.OooOO0$OooOo00:
    java.util.Comparator COMPARATOR -> OooO0OO
    org.apache.commons.codec.language.bm.Languages$LanguageSet languages -> OooO0O0
    java.lang.CharSequence phonemeText -> OooO00o
    1:1:void <clinit>():85:85 -> <clinit>
    1:3:void <init>(java.lang.CharSequence,org.apache.commons.codec.language.bm.Languages$LanguageSet):108:110 -> <init>
    1:1:java.lang.CharSequence access$000(org.apache.commons.codec.language.bm.Rule$Phoneme):84:84 -> OooO00o
    2:2:org.apache.commons.codec.language.bm.Rule$Phoneme append(java.lang.CharSequence):114:114 -> OooO00o
    3:3:java.lang.Iterable getPhonemes():122:122 -> OooO00o
    1:1:org.apache.commons.codec.language.bm.Languages$LanguageSet getLanguages():118:118 -> OooO0O0
    2:2:org.apache.commons.codec.language.bm.Rule$Phoneme join(org.apache.commons.codec.language.bm.Rule$Phoneme):130:130 -> OooO0O0
    1:1:java.lang.CharSequence getPhonemeText():126:126 -> OooO0OO
org.apache.commons.codec.language.bm.Rule$Phoneme$1 -> org.apache.commons.codec.language.bm.OooOO0$OooOo00$OooO00o:
    1:1:void <init>():85:85 -> <init>
    1:11:int compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme):87:97 -> OooO00o
    1:1:int compare(java.lang.Object,java.lang.Object):85:85 -> compare
org.apache.commons.codec.language.bm.Rule$PhonemeExpr -> org.apache.commons.codec.language.bm.OooOO0$OooOo:
    java.lang.Iterable getPhonemes() -> OooO00o
org.apache.commons.codec.language.bm.Rule$PhonemeList -> org.apache.commons.codec.language.bm.OooOO0$Oooo000:
    java.util.List phonemes -> OooO00o
    1:2:void <init>(java.util.List):141:142 -> <init>
    1:1:java.lang.Iterable getPhonemes():138:138 -> OooO00o
    1:1:java.util.List getPhonemes():146:146 -> OooO0O0
org.apache.commons.codec.language.bm.Rule$RPattern -> org.apache.commons.codec.language.bm.OooOO0$Oooo0:
    boolean isMatch(java.lang.CharSequence) -> OooO00o
org.apache.commons.codec.language.bm.RuleType -> org.apache.commons.codec.language.bm.RuleType:
    org.apache.commons.codec.language.bm.RuleType[] $VALUES -> OooO00o
    1:5:void <clinit>():29:33 -> <clinit>
    6:6:void <clinit>():26:26 -> <clinit>
    1:2:void <init>(java.lang.String,int,java.lang.String):37:38 -> <init>
    1:1:java.lang.String getName():42:42 -> getName
    1:1:org.apache.commons.codec.language.bm.RuleType valueOf(java.lang.String):26:26 -> valueOf
    1:1:org.apache.commons.codec.language.bm.RuleType[] values():26:26 -> values
org.apache.commons.codec.net.BCodec -> org.apache.commons.codec.net.OooO00o:
    java.lang.String charset -> OooO0Oo
    1:1:void <init>():58:58 -> <init>
    2:3:void <init>(java.lang.String):70:71 -> <init>
    1:1:java.lang.String getEncoding():76:76 -> OooO00o
    2:4:java.lang.String decode(java.lang.String):150:152 -> OooO00o
    5:8:java.lang.Object encode(java.lang.Object):169:172 -> OooO00o
    1:3:java.lang.String encode(java.lang.String,java.lang.String):112:114 -> OooO0O0
    4:4:java.lang.String encode(java.lang.String):132:132 -> OooO0O0
    5:8:java.lang.Object decode(java.lang.Object):194:197 -> OooO0O0
    9:9:java.lang.String getDefaultCharset():209:209 -> OooO0O0
    1:1:byte[] doDecoding(byte[]):92:92 -> OooO0OO
    1:1:byte[] doEncoding(byte[]):84:84 -> OooO0Oo
org.apache.commons.codec.net.QCodec -> org.apache.commons.codec.net.OooO0O0:
    boolean encodeBlanks -> OooO0o0
    byte BLANK -> OooO0oO
    byte UNDERSCORE -> OooO0oo
    java.util.BitSet PRINTABLE_CHARS -> OooO0o
    java.lang.String charset -> OooO0Oo
    1:43:void <clinit>():58:100 -> <clinit>
    1:1:void <init>():113:113 -> <init>
    2:2:void <init>(java.lang.String):125:125 -> <init>
    3:22:void <init>(java.lang.String):107:126 -> <init>
    1:1:java.lang.String getEncoding():131:131 -> OooO00o
    2:4:java.lang.String decode(java.lang.String):234:236 -> OooO00o
    5:8:java.lang.Object encode(java.lang.Object):253:256 -> OooO00o
    9:9:void setEncodeBlanks(boolean):312:312 -> OooO00o
    1:3:java.lang.String encode(java.lang.String,java.lang.String):194:196 -> OooO0O0
    4:4:java.lang.String encode(java.lang.String):214:214 -> OooO0O0
    5:8:java.lang.Object decode(java.lang.Object):278:281 -> OooO0O0
    9:9:java.lang.String getDefaultCharset():293:293 -> OooO0O0
    1:19:byte[] doDecoding(byte[]):156:174 -> OooO0OO
    20:20:boolean isEncodeBlanks():302:302 -> OooO0OO
    1:5:byte[] doEncoding(byte[]):139:143 -> OooO0Oo
org.apache.commons.codec.net.QuotedPrintableCodec -> org.apache.commons.codec.net.OooO0OO:
    byte ESCAPE_CHAR -> OooO0OO
    byte TAB -> OooO0Oo
    java.util.BitSet PRINTABLE_CHARS -> OooO0O0
    java.lang.String charset -> OooO00o
    byte SPACE -> OooO0o0
    1:18:void <clinit>():72:89 -> <clinit>
    1:1:void <init>():96:96 -> <init>
    2:3:void <init>(java.lang.String):106:107 -> <init>
    1:5:void encodeQuotedPrintable(int,java.io.ByteArrayOutputStream):119:123 -> OooO00o
    6:20:byte[] encodeQuotedPrintable(java.util.BitSet,byte[]):145:159 -> OooO00o
    21:21:byte[] decode(byte[]):231:231 -> OooO00o
    22:22:java.lang.String decode(java.lang.String,java.lang.String):280:280 -> OooO00o
    23:25:java.lang.String decode(java.lang.String):300:302 -> OooO00o
    26:31:java.lang.Object encode(java.lang.Object):319:324 -> OooO00o
    32:32:java.lang.String getDefaultCharset():361:361 -> OooO00o
    1:1:byte[] encode(byte[]):212:212 -> OooO0O0
    2:4:java.lang.String encode(java.lang.String):256:258 -> OooO0O0
    5:10:java.lang.Object decode(java.lang.Object):344:349 -> OooO0O0
    11:11:java.lang.String encode(java.lang.String,java.lang.String):385:385 -> OooO0O0
    1:16:byte[] decodeQuotedPrintable(byte[]):181:196 -> OooO0OO
org.apache.commons.codec.net.RFC1522Codec -> org.apache.commons.codec.net.OooO0o:
    java.lang.String POSTFIX -> OooO0O0
    java.lang.String PREFIX -> OooO0OO
    char SEP -> OooO00o
    1:1:void <init>():47:47 -> <init>
    java.lang.String getEncoding() -> OooO00o
    1:10:java.lang.String encodeText(java.lang.String,java.lang.String):87:96 -> OooO00o
    byte[] doDecoding(byte[]) -> OooO0OO
    1:28:java.lang.String decodeText(java.lang.String):118:145 -> OooO0OO
    29:29:java.lang.String decodeText(java.lang.String):138:138 -> OooO0OO
    30:30:java.lang.String decodeText(java.lang.String):134:134 -> OooO0OO
    31:31:java.lang.String decodeText(java.lang.String):129:129 -> OooO0OO
    32:32:java.lang.String decodeText(java.lang.String):125:125 -> OooO0OO
    33:33:java.lang.String decodeText(java.lang.String):119:119 -> OooO0OO
    byte[] doEncoding(byte[]) -> OooO0Oo
org.apache.commons.codec.net.URLCodec -> org.apache.commons.codec.net.OooO:
    byte ESCAPE_CHAR -> OooO0OO
    int RADIX -> OooO0O0
    java.util.BitSet WWW_FORM_URL -> OooO0Oo
    java.lang.String charset -> OooO00o
    1:22:void <clinit>():74:95 -> <clinit>
    1:1:void <init>():103:103 -> <init>
    2:3:void <init>(java.lang.String):112:113 -> <init>
    1:23:byte[] encodeUrl(java.util.BitSet,byte[]):130:152 -> OooO00o
    24:24:byte[] decode(byte[]):210:210 -> OooO00o
    25:25:java.lang.String decode(java.lang.String,java.lang.String):269:269 -> OooO00o
    26:28:java.lang.String decode(java.lang.String):288:290 -> OooO00o
    29:34:java.lang.Object encode(java.lang.Object):307:312 -> OooO00o
    35:35:java.lang.String getDefaultCharset():348:348 -> OooO00o
    1:1:byte[] encode(byte[]):196:196 -> OooO0O0
    2:2:java.lang.String encode(java.lang.String,java.lang.String):228:228 -> OooO0O0
    3:5:java.lang.String encode(java.lang.String):246:248 -> OooO0O0
    6:11:java.lang.Object decode(java.lang.Object):332:337 -> OooO0O0
    12:12:java.lang.String getEncoding():359:359 -> OooO0O0
    1:18:byte[] decodeUrl(byte[]):168:185 -> OooO0OO
org.apache.commons.codec.net.Utils -> org.apache.commons.codec.net.OooOO0:
    1:1:void <init>():29:29 -> <init>
    1:3:int digit16(byte):42:44 -> OooO00o
